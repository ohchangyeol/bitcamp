new 키워드를 쓰면 this, super라는 키워드를 쓸수있다.

this = 나
super = 상위

connot Resolve Symbol = ~~~~를 찾을수 없다.

this()와 this 의 차이점 - this() 같은 클레스의 다른생성자를 호출하고 this 는 같은 클래스의 레퍼런스(멤버변수)를 말한다.

super()와 super 의 차이점 - super()는 조상클래스의 생성자를 호출키는것과 super는 super클래스의 맴버변수를 선언한다.

- 상속
자손 클래스는 조상 클래스의 모든것(필드,메서드)을 상속받는다.

-관계
상속관계 (~ is a ) = ~은 ~이다 ==>자식 클래스에서 상위 클래스를 표현하는 방법.
	사람은 동물이다.
	(하위) (상위)
		
포함관계 (~ has a) = ~은 ~을 가지고있다. ==> 조상 클래스에서 자식 클래스를 표현하는 방법.
	동물은 사람을 가지고있다.
	(상위)  (하위)
String 은 bean 이다. 그래서 원래 new 를 붙혀야하는데 많이 써서  String 만 써도 가능하게 만들었다.

win - 폴더(\) , 리눅스 - 디렉토리(/), java - package(.)

classpath 가 .아니면 자바 홈 경로 아니면C:\Program Files\Java\jre1.8.0_181\lib 로 지정되있다.
그안 폴더에 jar라는 자바에서지원하는 프로그램을 이용해 압축키시고 그 압축 시킨것안에 들어있는데 그것을 하나씩 찾아가는 뭐 그런 ? 원리 인거같은데

일단 자주 사용하는 String같은 경우 import 값이 default 로 java 에서 지원해주게 되어 사용하지 않아도 가능하다. 

왜 패키지를 안쓸건지 
패키지를만들면 doc로 실행 시키기 힘들다.

컴파일 하고 옮기는거 한번에 하는거
javac -d . PackageTest02.java              <== 컴파일시 -d 옵션의 사용
java jp05.part02.PackageTest02          <== package 사용 Application 의 실행방법

패키지는 소문자 쓰는것을 원칙으로 한다. 폴더는 대소문자를 구분하지않기때문에 굳이 그럴필요 없다.ㅅㅂ 

Private - 개인의, 비공개  같은 클래스 안에서만 사용 가능.
default(지정하지않을 때) - 같은 클래스, 같은 패키지 안에서
protected = 같은 클래스, 같은패키지,상속된 자손까지 접근가능.
public - 공용,공개

static, final, abstract 어려움ㅅㅂ 특별한 기능있음 

static에 class 에 안붙음 field method 에 붙음.

static + 맴버변수 = 클래스변수라 하는갑다.
static Method는 인스턴스 하지않아도 호출이 가능함.
static Method 내에서 인스턴스맴버를 직접 사용이 불가능.

전체로 다같이 쓸때 static을 쓰는거같음. 예를들어 반응형 웹을 만든다 가정하면 width값과 height값 에 맞춰 html 구조라든가 동작들이 바뀌는 것들 그런 변수와, 메소드를 여러 페이지에서 같이 쓰기때문에 그런것을 인스턴스화 해서 사용하지않고 인스턴스 없이부를수 있게 도와주는 것이 아닐까 하는 생각.

